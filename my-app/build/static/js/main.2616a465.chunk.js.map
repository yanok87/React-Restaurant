{"version":3,"sources":["Components/StyledComponents.tsx","Components/FoodCard.tsx","Components/FoodInput.tsx","Components/MenuContent.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","form","FormTitle","p","Label","label","Input","input","SubmitButton","button","CardWrapper","Title","Ingredients","Products","RestaurantWrapper","div","ContentWrapper","MenuWrapper","FoodCard","props","foodName","foodIngredients","useState","showProducts","setShowProducts","onClick","map","ingredient","index","key","subIngredientName","subIngredientProducts","product","FoodInput","addFood","setFoodName","foodIngredient1","setfoodIngredient1","product1","setProduct1","foodIngredient2","setfoodIngredient2","product2","setProduct2","foodIngredient3","setfoodIngredient3","product3","setProduct3","menuItem1","split","products","id","shortid","generate","menuItem2","menuItem3","onSubmit","e","preventDefault","htmlFor","type","name","placeholder","value","onChange","target","required","menuContent","App","menu","setMenu","searchValue","setSearchValue","searchResults","setSearchResults","React","useEffect","results","filter","menuItem","includes","food","newMenu","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2616a465.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n\nexport const Wrapper = styled.form`\npadding: 20px;\nmargin: 10px;\nborder-radius: 10px;\nbox-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\ndisplay: flex;\nflex-direction: column;\nwidth: 300px;\nbackground-color: white;\n`;\n\nexport const FormTitle = styled.p`\nfont-size: 20px;\ntext-align: center;\nmargin: 0;\nmargin-bottom: 15px;\n\n`;\n\nexport const Label = styled.label`\nfont-size: 16px;\nmargin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\npadding-left: 10px;\nfont-size: 14px;\nwidht: 150px;\nheight: 30px;\nborder-radius: 5px;\nmargin-bottom: 15px;\noutline: none;\n`;\n\nexport const SubmitButton = styled.button`\npadding: 10px;\nborder-radius: 10px;\ncolor: white;\nbackground-color: lightcoral;\nfont-weight: bold;\nfont-size: 16px;\noutline: none;\nbox-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\ntransition: all 0.5s ease-in;\n`;\n\nexport const CardWrapper = styled.button`\npadding: 10px;\nmargin: 10px;\nborder-radius: 10px;\noutline: none;\nbox-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\ntransition: all 0.3s ease-in;\n:hover {\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n  }\n`;\n\nexport const Title = styled.p`\nfont-size: 24px;\ntext-align: center;\nmargin: 0;\nmargin-bottom: 10px;\n`;\n\nexport const Ingredients = styled.p`\nfont-size: 18px;\nmargin: 0;\n`;\n\nexport const Products = styled.p`\nfont-size: 14px;\nmargin: 0;\n`;\n\nexport const RestaurantWrapper = styled.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: space-between;\nbackground-color: wheat;\npadding: 30px;\n`;\n\nexport const ContentWrapper = styled.div`\ndisplay: flex;\nflex: 1;\nflex-direction: column;\nalign-items: center;\n`;\n\nexport const MenuWrapper = styled.div`\n`;","import React, { useState } from 'react';\nimport { CardWrapper, Ingredients, Products, Title } from './StyledComponents';\n\n\nexport interface IMenuItem {\n    foodName: string;\n    foodIngredients: ISubIngredient [];\n    products?: string;\n    id: string;\n}\n\nexport interface ISubIngredient {\n    subIngredientName: string;\n    subIngredientProducts: string [];\n}\n\nconst FoodCard = (props: IMenuItem) => {\nconst {foodName, foodIngredients } = props; \nconst [showProducts, setShowProducts] = useState(false);   \n    return ( <CardWrapper onClick={()=> {setShowProducts(!showProducts)}}>\n        <Title>{foodName}</Title>\n        {foodIngredients.map((ingredient, index)=>{\n           return <div key={index}> <Ingredients >{ingredient.subIngredientName}</Ingredients>\n            {showProducts && ingredient.subIngredientProducts.map((product, index) => {\n            return <Products key={index}>{product}</Products>\n            })} </div>\n        })}\n    </CardWrapper>\n    )\n};\n\nexport default FoodCard;","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport shortid from 'shortid';\nimport { IMenuItem } from './FoodCard';\nimport { FormTitle, Input, Label, SubmitButton, Wrapper } from './StyledComponents';\n\nexport interface IFoodInput {\n    addFood: (food: IMenuItem) => void; \n}\n\nconst FoodInput = (props: IFoodInput) => {\n    const {addFood} = props;\n\n    const [foodName, setFoodName] = useState<string>('');\n    const [foodIngredient1, setfoodIngredient1] = useState<string>('');\n    const [product1, setProduct1] = useState<string>('');\n    const [foodIngredient2, setfoodIngredient2] = useState<string>('');\n    const [product2, setProduct2] = useState<string>('');\n    const [foodIngredient3, setfoodIngredient3] = useState<string>('');\n    const [product3, setProduct3] = useState<string>('');\n\nconst clearInputs = () => {\n    setFoodName('');\n    setfoodIngredient1('');\n    setProduct1('');\n    setfoodIngredient2('');\n    setProduct2('');\n    setfoodIngredient3('');\n    setProduct3('');\n}\nconst menuItem1 = {\n    foodName,\n    foodIngredients: [\n        { \n            subIngredientName: foodIngredient1 ,\n            subIngredientProducts: product1.split(',')\n        }\n    ],\n    products: product1,\n    id: shortid.generate(),\n}\n\nconst menuItem2 = {\n    foodName,\n    foodIngredients: [\n        { \n            subIngredientName: foodIngredient1 ,\n            subIngredientProducts: product1.split(',')\n        },\n        { \n            subIngredientName: foodIngredient2 ,\n            subIngredientProducts: product2.split(',')\n        }\n    ],\n    products: `${product1},${product2}`,\n    id: shortid.generate(),\n}\n\nconst menuItem3 = {\n    foodName,\n    foodIngredients: [\n        { \n            subIngredientName: foodIngredient1 ,\n            subIngredientProducts: product1.split(',')\n        },\n        { \n            subIngredientName: foodIngredient2 ,\n            subIngredientProducts: product2.split(',')\n        },\n        { \n            subIngredientName: foodIngredient3 ,\n            subIngredientProducts: product3.split(',')\n        }\n    ],\n    products: `${product1},${product2},${product3}`,\n    id: shortid.generate(),\n}\n\nconst selectedMenuItem = () => {\n    if(menuItem3.foodIngredients[2].subIngredientName === \"\" && menuItem3.foodIngredients[1].subIngredientName === \"\"){\n        return menuItem1;\n    } else if(menuItem3.foodIngredients[2].subIngredientName === \"\"){\n        return menuItem2;\n    } else return menuItem3;\n}\n\nconst handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    addFood({...selectedMenuItem()});\n    clearInputs();\n};\n\nconst onFoodNameChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setFoodName(e.target.value);\n};\n\nconst onIngredient1Change = (e: ChangeEvent<HTMLInputElement>) => {\n    setfoodIngredient1(e.target.value);\n};\n\nconst onProduct1Change = (e: ChangeEvent<HTMLInputElement>) => {\n    setProduct1(e.target.value);\n};\nconst onIngredient2Change = (e: ChangeEvent<HTMLInputElement>) => {\n    setfoodIngredient2(e.target.value);\n};\n\nconst onProduct2Change = (e: ChangeEvent<HTMLInputElement>) => {\n    setProduct2(e.target.value);\n};\nconst onIngredient3Change = (e: ChangeEvent<HTMLInputElement>) => {\n    setfoodIngredient3(e.target.value);\n};\n\nconst onProduct3Change = (e: ChangeEvent<HTMLInputElement>) => {\n    setProduct3(e.target.value);\n};\n\n    return <Wrapper onSubmit={handleSubmit}>\n        <FormTitle>Add new dish to menu</FormTitle>\n        <Label htmlFor=\"foodName\">Dish name</Label>\n        <Input id=\"foodName\" type=\"text\" name=\"foodName\" placeholder=\"ex: Pizza Margharita\"  value={foodName} onChange={onFoodNameChange} required/>\n        <Label htmlFor=\"foodIngredient1\">Ingredient</Label>\n        <Input id=\"foodIngredient1\" type=\"text\" name=\"foodIngredient1\" placeholder=\"ex: Pizza Bread\" value={foodIngredient1} onChange={onIngredient1Change} required/>\n        <Label htmlFor=\"product1\">What products does this ingredient consist of?</Label>\n        <Input id=\"product1\" type=\"text\" name=\"product1\" placeholder=\"ex: flour, water\" value={product1} onChange={onProduct1Change}  required/>\n        <Label htmlFor=\"foodIngredient2\">Additional ingredient</Label>\n        <Input id=\"foodIngredient2\" type=\"text\" name=\"foodIngredient2\" placeholder=\"ex: Tomato Sauce \" value={foodIngredient2} onChange={onIngredient2Change}/>\n        <Label htmlFor=\"product2\">What products does this ingredient consist of?</Label>\n        <Input id=\"product2\" type=\"text\" name=\"product2\" placeholder=\"ex: tomatoes, garlic\" value={product2} onChange={onProduct2Change}/>\n        <Label htmlFor=\"foodIngredient3\">Additional Ingredient</Label>\n        <Input id=\"foodIngredient3\" type=\"text\" name=\"foodIngredient3\" placeholder=\"ex: Mozzarella cheese\" value={foodIngredient3} onChange={onIngredient3Change}/>\n        <Label htmlFor=\"product3\">What products does this ingredient consist of?</Label>\n        <Input id=\"product3\" type=\"text\" name=\"product3\" placeholder=\"ex: milk\" value={product3} onChange={onProduct3Change}/>\n        <SubmitButton type=\"submit\">Add to menu</SubmitButton>\n    </Wrapper>\n}\n\nexport default FoodInput;","\nexport const menuContent = [{\n    foodName: 'Pizza Funghi',\n    foodIngredients: [\n      {\n        subIngredientName: 'Bread',\n        subIngredientProducts: ['flour', 'water']\n      },\n      {\n        subIngredientName: 'Tomato Sauce',\n        subIngredientProducts: ['tomatoes', 'garlic']\n      },\n      {\n        subIngredientName: 'Mushrooms',\n        subIngredientProducts: ['champignons']\n      }\n    ],\n    products: 'flour, water, tomatoes, garlic, champignons',\n    id: 'id-1'\n  },\n  {\n    foodName: 'Pizza Margherita',\n    foodIngredients: [\n      {\n        subIngredientName: 'Bread',\n        subIngredientProducts: ['flour', 'water']\n      },\n      {\n        subIngredientName: 'Tomato Sauce',\n        subIngredientProducts: ['tomatoes', 'garlic']\n      },\n      {\n        subIngredientName: 'Mozzarella',\n        subIngredientProducts: ['milk']\n      }\n    ],\n    products: 'flour, water, tomatoes, garlic, milk',\n    id: 'id-2'\n  }, \n  {\n    foodName: 'Pizza Prosciutto',\n    foodIngredients: [\n      {\n        subIngredientName: 'Bread',\n        subIngredientProducts: ['flour', 'water']\n      },\n      {\n        subIngredientName: 'Tomato Sauce',\n        subIngredientProducts: ['tomatoes', 'garlic']\n      },\n      {\n        subIngredientName: 'Ham',\n        subIngredientProducts: ['pork']\n      }\n    ],\n    products: 'flour, water, tomatoes, garlic, pork',\n    id: 'id-3'\n  }, \n  ]","import React, { ChangeEvent, useState } from 'react';\nimport FoodCard, { IMenuItem } from './Components/FoodCard';\nimport FoodInput from './Components/FoodInput';\nimport { menuContent } from './Components/MenuContent';\nimport { FormTitle, Input, Wrapper, Products, RestaurantWrapper, ContentWrapper, MenuWrapper } from './Components/StyledComponents';\n\nconst App = () => {\nconst [menu, setMenu] = useState<IMenuItem[]>([...menuContent]);\nconst [searchValue, setSearchValue] = useState<string>('');\nconst [searchResults, setSearchResults] = useState<IMenuItem[]>([]);\n\nReact.useEffect(() => {\n  const results:IMenuItem[] = menu.filter((menuItem:IMenuItem) => \n        menuItem.products?.includes(searchValue));\n  setSearchResults(results);\n}, [searchValue, menu]);\n\nconst saveFood = (food:IMenuItem): void => {\n  const newMenu: IMenuItem[] = [...menu, {...food}]\n  setMenu(newMenu)\n};\n\nconst handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n setSearchValue(e.target.value);\n};\n\nreturn (\n     <RestaurantWrapper>\n        <FoodInput addFood={saveFood}/>\n        <ContentWrapper>\n        <Wrapper>\n            <FormTitle>Find a specific ingredient</FormTitle>\n            <Input\n                type=\"text\"\n                value={searchValue}\n                onChange={handleSearchChange}\n                placeholder=\"Type to find an ingredient...\"\n            />\n        </Wrapper>\n        <MenuWrapper>\n          {searchValue === \"\" ? menu.map((menuItem: IMenuItem)=>{\n            return <FoodCard id={menuItem.id} key={menuItem.id} foodName={menuItem.foodName} foodIngredients={menuItem.foodIngredients}/>\n          }): searchResults.map((menuItem: IMenuItem)=>{\n            return <FoodCard id={menuItem.id} key={menuItem.id} foodName={menuItem.foodName} foodIngredients={menuItem.foodIngredients}/>\n          })}\n          {searchResults.length === 0 && <Products>We have no dishes with \"{searchValue}\"</Products>}\n          </MenuWrapper>\n          </ContentWrapper>\n     </RestaurantWrapper>\n   );\n }\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}